name: Firebase Deploy

on:
  push:
    branches: [main]

jobs:
  # Step 1: Detect what changed
  changes:
    name: üß† Analyze file changes
    runs-on: ubuntu-latest
    outputs:
      hosting: ${{ steps.filter.outputs.hosting }}
      functions: ${{ steps.filter.outputs.functions }}
      firestore: ${{ steps.filter.outputs.firestore }}
      database: ${{ steps.filter.outputs.database }}
      storage: ${{ steps.filter.outputs.storage }}
    steps:
      - uses: actions/checkout@v3
      - name: Filter changed files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            hosting:
              - 'web/**'
            functions:
              - 'functions/**'
            firestore:
              - 'firestore.rules'
            database:
              - 'database.rules.json'
            storage:
              - 'storage.rules'

  # Step 2: Deploy Hosting if changed
  deploy-hosting:
    name: üöÄ Deploy Hosting
    needs: changes
    if: needs.changes.outputs.hosting == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - run: |
          npm install
          npm install --prefix web
          npm run build --prefix web

      - name: Deploy Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          projectId: "peniel-ny"
          deployTargets: hosting

  # Step 3: Deploy Functions if changed
  deploy-functions:
    name: ‚öôÔ∏è Deploy Functions
    needs: changes
    if: needs.changes.outputs.functions == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - run: |
          npm install
          npm install --prefix functions

      - name: Deploy Functions
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          projectId: "peniel-ny"
          deployTargets: functions

  # Step 4: Deploy Firestore Rules if changed
  deploy-firestore:
    name: üîê Deploy Firestore Rules
    needs: changes
    if: needs.changes.outputs.firestore == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Deploy Firestore Rules
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          projectId: "peniel-ny"
          deployTargets: firestore:rules

  # Step 5: Deploy Database Rules if changed
  deploy-database:
    name: üìò Deploy Realtime DB Rules
    needs: changes
    if: needs.changes.outputs.database == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Deploy DB Rules
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          projectId: "peniel-ny"
          deployTargets: database:rules

  # Step 6: Deploy Storage Rules if changed
  deploy-storage:
    name: üóÇ Deploy Storage Rules
    needs: changes
    if: needs.changes.outputs.storage == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Deploy Storage Rules
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          projectId: "peniel-ny"
          deployTargets: storage:rules
